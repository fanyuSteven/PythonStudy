# 元组和列表很类似，有一些差别
# 但元组和列表有些不同元组一旦定义好，就不能随意插入或删除元素，是不能改变的，故也不能排序
# 还有其他三个方面的不同
# 1.创键和访问一个元组
tuple1 = (1, 2, 3, 4, 5, 6, 7, 8)  # 元组用( , , )来定义
print(tuple1[1])  # 访问某一元素，元组名[Index]
print(tuple1[1:])  # 获取某一子元组（即序列中也学过的叫切片）
print(tuple1[:5])
print(tuple1[3:5])
print(tuple1[:])
# tuple1[2] = 3  # 元组不能修改，故这里会报错

temp = (1)  # 只带一个括号，没有 , 逗号分隔的数就是普通的数
print(type(temp))  # 这里发现temp是整型数据，<class 'int'>
temp2 = 2, 3, 4, 5  # 这里有多个数据，且用 , 逗号分隔开的才是元组，且注意元组有没有小括号()是无所谓的，主要有逗号
print(type(temp2))  # <class 'tuple'>
temp3 = (1,)
print(type(temp3))  # <class 'tuple'>
temp4 = 1,
print(type(temp4))  # <class 'tuple'>
temp5 = []
print(type(temp5))  # <class 'list'>
temp6 = ()  # 空元组就可以没有逗号，但其他要表示元组都要带逗号
print(type(temp6))  # <class 'tuple'>

print(8 * (8))  # 单个元素没有逗号，就是普通的数，结果为64
print(8 * (8,))  # 有逗号就是元组，*为重复操作符，8重复8遍，结果为(8, 8, 8, 8, 8, 8, 8, 8)

# 2.更新和删除一个元组
# 更新
temp = ('小甲鱼', '黑夜', '迷途', '小布丁')
temp1 = temp[0:2] + ('怡静',) + temp[2:]  # 只能用拼接来插入某一元素
print(temp1)  # 因为元组不能随意改变，不能用以前插入序列的方法插入元素到元组中，故使用拼接的方法，这里取出元组切片进行拼接是放到另一片存储空间故原来的元组并不改变，序列中你学过的，所以原来的元组并没有改变。

# 删除 ’迷途‘ 这个元素
temp2 = temp[0:2] + temp[3:]  # 用拼接来删除某一元素
print(temp2)
# del temp(1)  # 报错，元组不能直接删除某一元素，只能用拼接来删除某一元素
del temp
# print(temp)  # 这里会报错，因为del temp相当于删除temp这个元组，而python中元组中所有数据都delete之后，temp所命名的空间也会释放，故无法打印报错

# 3.元组相关的操作符
# 比较操作符>、<、==、<=、>=、!=
# 逻辑操作符and、or......
# 拼接操作符 +
# 重复操作符 即 n * (1, 2, 3)
# 成员关系操作符 in, not in

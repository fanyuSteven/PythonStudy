a = max(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
print(a)  # 打印结果为：12

b = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)
c = ['a', 'b', 'c', 'd', 'e', 'v']
d = '123456789'
print(max(b))  # 打印结果为：11
print(max(c))  # 打印结果为：v  因为ASCII码中v的数值最大
print(max(d))  # 打印结果为：9  因为ASCII码中9的数值最大

e = (1, 2, 3, 4, 'a')
# print(max(e))

f = [1.1, 2.2, 3.3, 4.4, 5.5, 6.6]
print(sum(f))  # 打印结果为：23.1
# print(sum(e))  # 会报错因为e中元素既有数字也有字符，无法相加
print(sum(f, 10))  # 打印结果为：33.1

# sorted可以对序列进行排序（列表、元组、字符串），返回的是一个列表，之前我们学过字符串和元组本身是不能排序的，但sorted会先把字符串和元组中元素放到另一个存储空间中变成列表，再对该列表进行排序，所以返回值是一个列表，且不会改变原来序列
tuple1 = (1, -2, 23, 44, 5, 37, 7, 8, 0, 10, -95)
str1 = 'abcdefghijklmnopqrst'
print(sorted(tuple1))  # 这里返回的是一个列表[-95, -2, 0, 1, 5, 7, 8, 10, 23, 37, 44]
print(sorted(str1))  # 返回一个列表['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't']
print(tuple1)  # sorted()对序列进行排序，序列本身没有改变，打印结果仍然是原来的(1, -2, 23, 44, 5, 37, 7, 8, 0, 10, -95)
print(str1)  # sorted()对序列进行排序，序列本身没有改变，打印结果仍然是原来的abcdefghijklmnopqrst
list1 = [1, -2, 23, 44, 5, 37, 7, 8, 0, 10, -95]
list1.sort()  # 而sort()方法，只能对列表进行排序,因为元组和字符串定义好了不能改变
# tuple1.sort()  # 报错
# str1.sort()  # 报错
print(list1)  # 打印结果：[-95, -2, 0, 1, 5, 7, 8, 10, 23, 37, 44]，列表已经本身发生改变

tuple1 = (1, -2, 23, 44, 5, 37, 7, 8, 0, 10, -95)
str1 = 'abcdefghijklmnopqrst'
print(reversed(tuple1))  # 这里返回的是不是一个列表，而是一个迭代器对象<reversed object at 0x000001A5EDEAFAC0>，但可以转换成列表
print(list(reversed(tuple1)))  # 将迭代器转换成列表，用list()方法,[-95, 10, 0, 8, 7, 37, 5, 44, 23, -2, 1]
print(reversed(str1))  # 这里返回的是不是一个列表，而是一个迭代器对象<reversed object at 0x000001A5EDEAFAC0>，但可以转换成列表
print(list(reversed(str1)))  # 将迭代器转换成列表，用list()方法,['t', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'l', 'k', 'j', 'i', 'h', 'g', 'f', 'e', 'd', 'c', 'b', 'a']
print(tuple1)  # sorted()对序列进行排序，序列本身没有改变，打印结果仍然是原来的(1, -2, 23, 44, 5, 37, 7, 8, 0, 10, -95)
print(str1)  # sorted()对序列进行排序，序列本身没有改变，打印结果仍然是原来的abcdefghijklmnopqrst

tuple1 = (1, -2, 23, 44, 5, 37, 7, 8, 0, 10, -95)
print(enumerate(tuple1))  # 返回的是迭代器对象，<enumerate object at 0x0000023CC4963330>，可以用list改为列表
print(list(enumerate(tuple1)))  # 打印结果：[[(0, 1), (1, -2), (2, 23), (3, 44), (4, 5), (5, 37), (6, 7), (7, 8), (8, 0), (9, 10), (10, -95)]
# 同理其他序列
str1 = 'abcde阿斯蒂芬'
print(list(enumerate(str1)))  # 打印结果：[[(0, 'a'), (1, 'b'), (2, 'c'), (3, 'd'), (4, 'e'), (5, '阿'), (6, '斯'), (7, '蒂'), (8, '芬')]
list1 = [1, -2, 23, 44, 5, 37, 7, 8, 0, 10, -95]
print(list(enumerate(list1)))  # 打印结果：[[(0, 1), (1, -2), (2, 23), (3, 44), (4, 5), (5, 37), (6, 7), (7, 8), (8, 0), (9, 10), (10, -95)]

a = [1, -2, 23, 44]
b = [1, 2, 3, 4, 5, 6, 7, 8]
d = [5, 6, 7, 8]
print(zip(a, b, d))  # 返回的是迭代器对象，<zip object at 0x000002282C64F900>，可以用list改为列表
print(list(zip(a, b, d)))  # 打印结果：[(1, 1, 5), (-2, 2, 6), (23, 3, 7), (44, 4, 8)]
